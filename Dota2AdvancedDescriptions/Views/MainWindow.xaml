<controls:MetroWindow x:Class="Dota2AdvancedDescriptions.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:Dota2AdvancedDescriptions"
                      xmlns:views="clr-namespace:Dota2AdvancedDescriptions.Views"
                      xmlns:helpers="clr-namespace:Dota2AdvancedDescriptions.Helpers"
                      xmlns:enums="clr-namespace:Dota2AdvancedDescriptions.Enums"
                      xmlns:properties="clr-namespace:Dota2AdvancedDescriptions.Properties"
                      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                      xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      mc:Ignorable="d"
                      Loaded="Window_Loaded"
                      WindowStartupLocation="CenterScreen"
                      Title="Dota 2 Advanced Descriptions"
                      Closing="Window_Closing"
                      Height="720"
                      Width="1080"
                      Padding="2.5"
                      BorderBrush="{DynamicResource AccentColorBrush}"
                      BorderThickness="1">
    <ScrollViewer  VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!-- Settings -->
            <Grid Grid.Row="0"
                  Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <GroupBox Header="{x:Static properties:Resources.Setup}"
                          Grid.Row="0">
                    <DockPanel>
                        <ComboBox DockPanel.Dock="Right"
                                  MinWidth="130"
                                  ItemsSource="{Binding AvailableResourceFileNames}"
                                  SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=SelectedResourcesFileName}"
                                  VirtualizingPanel.IsVirtualizing="True"
                                  controls:TextBoxHelper.Watermark="{x:Static properties:Resources.Language}"
                                  controls:TextBoxHelper.UseFloatingWatermark="True"
                                  IsEditable="True" IsReadOnly="True"/>
                        <TextBox Text="{Binding Source={x:Static properties:Settings.Default}, Path=ResourcesFolderPath}"
                                 controls:TextBoxHelper.Watermark="{x:Static properties:Resources.ResourcesFolderPath}"
                                 controls:TextBoxHelper.UseFloatingWatermark="True" />
                    </DockPanel>
                </GroupBox>

                <GroupBox Header="{x:Static properties:Resources.Appearance}"
                          Padding="2.5"
                          Grid.Row="1">
                    <StackPanel Orientation="Vertical">
                        
                        <UniformGrid Columns="2">
                            <StackPanel>
                                <ComboBox DisplayMemberPath="DisplayName"
                                          ItemsSource="{helpers:EnumToItemsSource {x:Type enums:ExtraTextPosition}}"
                                          SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=ExtraTextPosition}"
                                          SelectedValuePath="Value"
                                          VerticalAlignment="Top"
                                          controls:TextBoxHelper.Watermark="{x:Static properties:Resources.ExtraTextPosition}"
                                          controls:TextBoxHelper.UseFloatingWatermark="True"
                                          IsEditable="True"
                                          IsReadOnly="True"
                                          Margin="2.5 2.5 2.5 2.5" />
                                <TextBox Text="{Binding Source={x:Static properties:Settings.Default}, Path=CastPointTextFormat, UpdateSourceTrigger=PropertyChanged}"
                                         controls:TextBoxHelper.Watermark="{x:Static properties:Resources.CastPointTextFormat}"
                                         controls:TextBoxHelper.UseFloatingWatermark="True"
                                         Margin="2.5 2.5 2.5 2.5" />
                                <TextBox Text="{Binding Source={x:Static properties:Settings.Default}, Path=CastBackswingTextFormat, UpdateSourceTrigger=PropertyChanged}"
                                         controls:TextBoxHelper.Watermark="{x:Static properties:Resources.CastBackswingTextFormat}"
                                         controls:TextBoxHelper.UseFloatingWatermark="True"
                                         Margin="2.5 2.5 2.5 2.5" />
                                <TextBox Text="{Binding Source={x:Static properties:Settings.Default}, Path=RubickCastBackswingTextFormat, UpdateSourceTrigger=PropertyChanged}"
                                         controls:TextBoxHelper.Watermark="{x:Static properties:Resources.RubickCastBackswingTextFormat}"
                                         controls:TextBoxHelper.UseFloatingWatermark="True"
                                         Margin="2.5 2.5 2.5 2.5" />
                            </StackPanel>
                            <Expander Margin="2.5 2.5 2.5 2.5"
                                      Header="{x:Static properties:Resources.UseCustomColor}"
                                      IsExpanded="{Binding Source={x:Static properties:Settings.Default}, Path=UseCustomColor}">
                                <controls:ExpanderHelper.HeaderDownStyle>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Padding="{TemplateBinding Padding}">
                                                        <Grid SnapsToDevicePixels="False"
                                                              Background="Transparent">
                                                            <ContentPresenter SnapsToDevicePixels="True"
                                                                              HorizontalAlignment="Left"
                                                                              VerticalAlignment="Center"
                                                                              RecognizesAccessKey="True" />
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </controls:ExpanderHelper.HeaderDownStyle>
                                <Expander.HeaderTemplate>
                                    <DataTemplate>
                                        <CheckBox Content="{x:Static properties:Resources.UseCustomColor}"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}}"
                                                  Foreground="White"
                                                  Margin="2.5 2.5 2.5 2.5" />
                                    </DataTemplate>
                                </Expander.HeaderTemplate>
                                <xctk:ColorCanvas UsingAlphaChannel="False"
                                                  SelectedColor="{Binding Source={x:Static properties:Settings.Default}, Path=SelectedColor}"
                                                  Margin="2.5 2.5 2.5 2.5" />
                            </Expander>
                        </UniformGrid>
                    </StackPanel>
                </GroupBox>
            </Grid>

            <StackPanel Grid.Column="1"
                        Orientation="Vertical">
                <GroupBox Header="{x:Static properties:Resources.Preview}">
                    <views:PreviewUserControl MinHeight="300" />
                </GroupBox>
                <Button Content="{x:Static properties:Resources.ResetResources}"
                        Command="{Binding ResetResourcesCommand}" />
                <Button Content="{x:Static properties:Resources.PublishResources}"
                        Command="{Binding CreateAdvancedDescriptionCommand}" />
            </StackPanel>

            <StatusBar Grid.Row="1"
                       DataContext="{Binding StatusBarViewModel}"
                       Grid.ColumnSpan="2">
                <StatusBarItem>
                    <TextBlock Text="{Binding Status, NotifyOnTargetUpdated=True}">
                        <TextBlock.Triggers>
                            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25"
                                                                  Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:4"
                                                                  Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:5"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </TextBlock.Triggers>
                    </TextBlock>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </ScrollViewer>
</controls:MetroWindow>
